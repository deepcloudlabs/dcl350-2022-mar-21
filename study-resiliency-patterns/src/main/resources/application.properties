spring.main.banner-mode=off
server.port=4848

resilience4j.retry.instances.lottery.max-attempts=5
resilience4j.retry.instances.lottery.wait-duration=1s
resilience4j.retry.instances.lottery.retry-exceptions=java.lang.Throwable
resilience4j.retry.instances.lottery.enable-exponential-backoff=true
resilience4j.retry.instances.lottery.exponential-backoff-multiplier=2

resilience4j.ratelimiter.instances.lottery.limit-for-period=1
resilience4j.ratelimiter.instances.lottery.limit-refresh-period=5s

management.endpoints.web.exposure.include=*
management.endpoint.retries.enabled=true
management.endpoint.retryevents.enabled=true
management.endpoint.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.endpoint.health.enabled=true

resilience4j.timelimiter.instances.lottery.timeout-duration=3s

# closed state --> open state
resilience4j.circuitbreaker.instances.lottery.failure-rate-threshold=20
# open state -- after 3 seconds -> half-open state 
resilience4j.circuitbreaker.instances.lottery.wait-duration-in-open-state=3s
# half-open state --> open state 
resilience4j.circuitbreaker.instances.lottery.max-wait-duration-in-half-open-state=5s
# half-open state --> closed state 
resilience4j.circuitbreaker.instances.lottery.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.lottery.minimum-number-of-calls=5
